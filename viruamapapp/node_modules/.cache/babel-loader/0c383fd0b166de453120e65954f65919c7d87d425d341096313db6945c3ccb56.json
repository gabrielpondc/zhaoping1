{"ast":null,"code":"const axios = require('axios');\nexport default {\n  name: 'glomap',\n  data() {\n    return {};\n  },\n  props: {\n    msg: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  watch: {\n    msg: {\n      deep: true,\n      handler(val) {\n        this.getWorld(val);\n      }\n    }\n  },\n  mounted() {\n    this.getWorld(this.msg);\n  },\n  methods: {\n    getWorld(data) {\n      var that = this;\n      axios.get('word.json').then(function (res) {\n        let namemap = res.data.namemap;\n        // let dataArr = res.data.dataArr\n        let dataArr = data.data;\n        that.drawChart(namemap, dataArr);\n      });\n    },\n    drawChart(name, data) {\n      // 基于准备好的dom，初始化echarts实例\n      let chart = echarts.init(document.getElementById('charts'));\n      // 监听屏幕变化自动缩放图表\n      window.addEventListener('resize', function () {\n        chart.resize();\n      });\n      // 绘制图表\n      chart.setOption({\n        // 图表主标题\n        // title: {\n        //   text: '世界地图', // 主标题文本，支持使用 \\n 换行\n        //   top: 10, // 定位 值: 'top', 'middle', 'bottom' 也可以是具体的值或者百分比\n        //   left: 'center', // 值: 'left', 'center', 'right' 同上\n        //   textStyle: { // 文本样式\n        //     fontSize: 24,\n        //     fontWeight: 600,\n        //     color: '#000'\n        //   }\n        // },\n        grid: {\n          width: '100%',\n          height: '100%',\n          left: '0%',\n          right: '0%',\n          bottom: '0%',\n          containLabel: true\n        },\n        // 提示框组件\n        tooltip: {\n          trigger: 'item',\n          // 触发类型, 数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用\n          // 提示框浮层内容格式器，支持字符串模板和回调函数两种形式\n          // 使用函数模板  传入的数据值 -> value: number | Array\n          formatter: function (val) {\n            if (val.data == null) return;\n            return val.data.name + ': ' + val.data.value;\n          }\n        },\n        // 视觉映射组件\n        visualMap: {\n          min: 0,\n          max: 10000,\n          text: ['max', 'min'],\n          realtime: false,\n          calculable: true,\n          color: ['#0064d0', '#c3e0ff']\n        },\n        series: [{\n          type: 'map',\n          // 类型\n          // 系列名称，用于tooltip的显示，legend 的图例筛选 在 setOption 更新数据和配置项时用于指定对应的系列\n          name: '世界地图',\n          mapType: 'world',\n          // 地图类型\n          // 是否开启鼠标缩放和平移漫游 默认不开启 如果只想要开启缩放或者平移，可以设置成 'scale' 或者 'move' 设置成 true 为都开启\n          roam: true,\n          // 图形上的文本标签\n          label: {\n            show: false // 是否显示对应地名\n          },\n\n          zoom: 1.2,\n          // 地图区域的多边形 图形样式\n          itemStyle: {\n            // areaColor: '#7B68EE', // 地图区域的颜色 如果设置了visualMap，areaColor属性将不起作用\n            borderWidth: 0.5,\n            // 描边线宽 为 0 时无描边\n            borderColor: '#000',\n            // 图形的描边颜色 支持的颜色格式同 color，不支持回调函数\n            borderType: 'solid' // 描边类型，默认为实线，支持 'solid', 'dashed', 'dotted'\n          },\n\n          // 高亮状态下的多边形和标签样式\n          emphasis: {\n            label: {\n              show: true,\n              // 是否显示标签\n              color: '#fff' // 文字的颜色 如果设置为 'auto'，则为视觉映射得到的颜色，如系列色\n            },\n\n            itemStyle: {\n              areaColor: '#FF6347' // 地图区域的颜色\n            }\n          },\n\n          // 自定义地区的名称映射\n          nameMap: name,\n          // 地图系列中的数据内容数组 数组项可以为单个数值\n          data: data\n        }]\n      });\n    }\n  },\n  created() {}\n};","map":{"version":3,"names":["axios","require","name","data","props","msg","type","Object","default","watch","deep","handler","val","getWorld","mounted","methods","that","get","then","res","namemap","dataArr","drawChart","chart","echarts","init","document","getElementById","window","addEventListener","resize","setOption","grid","width","height","left","right","bottom","containLabel","tooltip","trigger","formatter","value","visualMap","min","max","text","realtime","calculable","color","series","mapType","roam","label","show","zoom","itemStyle","borderWidth","borderColor","borderType","emphasis","areaColor","nameMap","created"],"sources":["src/components/glomap.vue"],"sourcesContent":["\n<template>\n    <div style=\"height:500px;width:100%\" id=\"charts\"></div>\n</template>\n\n<script>\nconst axios = require('axios');\nexport default {\n    name:'glomap',\n    data () {\n        return {}\n      },\n      props:{\n        msg:{\n          type:Object,\n          default:() => {}\n        }\n      },\n      watch:{\n        msg:{\n          deep: true,\n          handler(val) {\n            this.getWorld(val)\n          }\n        }\n      },\n      mounted () {\n        this.getWorld(this.msg)\n      },\n      methods: {\n        getWorld (data) {\n          var that = this\n          axios.get('word.json').then(function (res) {\n            let namemap = res.data.namemap\n            // let dataArr = res.data.dataArr\n            let dataArr = data.data\n            that.drawChart(namemap, dataArr)\n          })\n        },\n        drawChart (name, data) {\n          // 基于准备好的dom，初始化echarts实例\n          let chart = echarts.init(document.getElementById('charts'))\n          // 监听屏幕变化自动缩放图表\n          window.addEventListener('resize', function () {\n            chart.resize()\n          })\n          // 绘制图表\n          chart.setOption({\n            // 图表主标题\n            // title: {\n            //   text: '世界地图', // 主标题文本，支持使用 \\n 换行\n            //   top: 10, // 定位 值: 'top', 'middle', 'bottom' 也可以是具体的值或者百分比\n            //   left: 'center', // 值: 'left', 'center', 'right' 同上\n            //   textStyle: { // 文本样式\n            //     fontSize: 24,\n            //     fontWeight: 600,\n            //     color: '#000'\n            //   }\n            // },\n            grid: {\n              width:'100%',\n              height:'100%',\n                left: '0%',\n                right: '0%',\n                bottom: '0%',\n                containLabel: true\n            },\n            // 提示框组件\n            tooltip: {\n              trigger: 'item', // 触发类型, 数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用\n              // 提示框浮层内容格式器，支持字符串模板和回调函数两种形式\n              // 使用函数模板  传入的数据值 -> value: number | Array\n              formatter: function (val) {\n                if(val.data == null) return ;\n                return val.data.name + ': ' + val.data.value\n              }\n            },\n            // 视觉映射组件\n            visualMap: {\n              min: 0,\n              max: 10000,\n              text:['max','min'],\n              realtime: false,\n              calculable: true,\n              color: ['#0064d0','#c3e0ff'],\n            },\n            series: [\n              {\n                type: 'map', // 类型\n                // 系列名称，用于tooltip的显示，legend 的图例筛选 在 setOption 更新数据和配置项时用于指定对应的系列\n                name: '世界地图',\n                mapType: 'world', // 地图类型\n                // 是否开启鼠标缩放和平移漫游 默认不开启 如果只想要开启缩放或者平移，可以设置成 'scale' 或者 'move' 设置成 true 为都开启\n                roam: true,\n                // 图形上的文本标签\n                label: {\n                  show: false // 是否显示对应地名\n                },\n                zoom: 1.2,\n                // 地图区域的多边形 图形样式\n                itemStyle: {\n                  // areaColor: '#7B68EE', // 地图区域的颜色 如果设置了visualMap，areaColor属性将不起作用\n                  borderWidth: 0.5, // 描边线宽 为 0 时无描边\n                  borderColor: '#000', // 图形的描边颜色 支持的颜色格式同 color，不支持回调函数\n                  borderType: 'solid' // 描边类型，默认为实线，支持 'solid', 'dashed', 'dotted'\n                },\n                // 高亮状态下的多边形和标签样式\n                emphasis: {\n                  label: {\n                    show: true, // 是否显示标签\n                    color: '#fff' // 文字的颜色 如果设置为 'auto'，则为视觉映射得到的颜色，如系列色\n                  },\n                  itemStyle: {\n                    areaColor: '#FF6347' // 地图区域的颜色\n                  }\n                },\n                // 自定义地区的名称映射\n                nameMap: name,\n                // 地图系列中的数据内容数组 数组项可以为单个数值\n                data: data\n              }\n            ]\n          })\n        }\n      },\n    created() {}\n}\n\n</script>"],"mappings":"AAMA,MAAAA,KAAA,GAAAC,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;EACA;EACAC,KAAA;IACAC,GAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,EAAAA,CAAA;IACA;EACA;EACAC,KAAA;IACAJ,GAAA;MACAK,IAAA;MACAC,QAAAC,GAAA;QACA,KAAAC,QAAA,CAAAD,GAAA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAD,QAAA,MAAAR,GAAA;EACA;EACAU,OAAA;IACAF,SAAAV,IAAA;MACA,IAAAa,IAAA;MACAhB,KAAA,CAAAiB,GAAA,cAAAC,IAAA,WAAAC,GAAA;QACA,IAAAC,OAAA,GAAAD,GAAA,CAAAhB,IAAA,CAAAiB,OAAA;QACA;QACA,IAAAC,OAAA,GAAAlB,IAAA,CAAAA,IAAA;QACAa,IAAA,CAAAM,SAAA,CAAAF,OAAA,EAAAC,OAAA;MACA;IACA;IACAC,UAAApB,IAAA,EAAAC,IAAA;MACA;MACA,IAAAoB,KAAA,GAAAC,OAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA;MACAC,MAAA,CAAAC,gBAAA;QACAN,KAAA,CAAAO,MAAA;MACA;MACA;MACAP,KAAA,CAAAQ,SAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACA;QACAC,OAAA;UACAC,OAAA;UAAA;UACA;UACA;UACAC,SAAA,WAAAA,CAAA7B,GAAA;YACA,IAAAA,GAAA,CAAAT,IAAA;YACA,OAAAS,GAAA,CAAAT,IAAA,CAAAD,IAAA,UAAAU,GAAA,CAAAT,IAAA,CAAAuC,KAAA;UACA;QACA;QACA;QACAC,SAAA;UACAC,GAAA;UACAC,GAAA;UACAC,IAAA;UACAC,QAAA;UACAC,UAAA;UACAC,KAAA;QACA;QACAC,MAAA,GACA;UACA5C,IAAA;UAAA;UACA;UACAJ,IAAA;UACAiD,OAAA;UAAA;UACA;UACAC,IAAA;UACA;UACAC,KAAA;YACAC,IAAA;UACA;;UACAC,IAAA;UACA;UACAC,SAAA;YACA;YACAC,WAAA;YAAA;YACAC,WAAA;YAAA;YACAC,UAAA;UACA;;UACA;UACAC,QAAA;YACAP,KAAA;cACAC,IAAA;cAAA;cACAL,KAAA;YACA;;YACAO,SAAA;cACAK,SAAA;YACA;UACA;;UACA;UACAC,OAAA,EAAA5D,IAAA;UACA;UACAC,IAAA,EAAAA;QACA;MAEA;IACA;EACA;EACA4D,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}