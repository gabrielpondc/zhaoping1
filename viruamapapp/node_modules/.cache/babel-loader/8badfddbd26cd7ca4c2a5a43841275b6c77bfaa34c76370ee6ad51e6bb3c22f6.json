{"ast":null,"code":"import world from '../map/js/world';\nimport jsonp from \"jsonp\";\nlet option = {\n  title: {\n    text: \"疫情地图\",\n    //图表 标题\n    x: \"center\",\n    textStyle: {\n      color: \"red\"\n    }\n  },\n  toolbox: {\n    //工具栏\n    feature: {\n      saveAsImage: {} //保存图片\n    }\n  },\n\n  tooltip: {\n    //提示信息\n    trigger: \"item\",\n    //类型\n    formatter: \"地图：{b}<br/>确诊：{c}\"\n  },\n  series: [\n  //数据\n  {\n    type: \"map\",\n    //图表类型 是地图\n    map: \"world\",\n    //中国地图\n    zoom: 1.2,\n    //缩放比例\n    roam: true,\n    data: [],\n    label: {\n      //图形上的文本标签，可用于说明图形的一些数据信息\n      show: true,\n      color: \"#eee\",\n      fontSize: 10\n    },\n    emphasis: {\n      //输入表移入的显示情况\n      label: {\n        //图形上的文本标签，可用于说明图形的一些数据信息\n        show: true,\n        color: \"#ffffff\",\n        //鼠标移入文字颜色\n        fontSize: 16\n      },\n      itemStyle: {\n        show: true,\n        areaColor: \"#ccc\" //鼠标移入背景颜色\n      }\n    },\n\n    itemStyle: {\n      backgroundColor: \"red\",\n      borderColor: \"#eee\",\n      borderWidth: 1,\n      borderType: \"solid\",\n      areaColor: \"#ccc\"\n    }\n  }],\n  visualMap: {\n    //视觉映射组件 --侧边柱子\n    type: \"piecewise\",\n    //piecewise 点状视觉映射组件，continuous 直线状视觉映射组件\n    // min: 8, //最低多少\n    // max: 500, //最高多少\n    // text: [\"High\", \"Low\"], //高低处文本\n    // realtime: true, // 拖拽时，是否实时更新\n    // calculable: true, //是否显示拖拽用的手柄（手柄能拖拽调整选中范围）\n    itemWidth: 10,\n    //每个方块的宽度\n    itemHeight: 20,\n    //每个方块的高度\n    inRange: {\n      //范围\n      color: [\"#d0ddec\", \"#42b983\", \"red\"] //高中低处的颜色\n    },\n\n    pieces: [{\n      min: 400\n    },\n    // 不指定 max，表示 max 为无限大（Infinity）。\n    {\n      min: 80,\n      max: 300\n    }, {\n      min: 60,\n      max: 79\n    }, {\n      min: 20,\n      max: 59\n    }, {\n      min: 1,\n      max: 19\n    },\n    // { value: 123, label: \"123（自定义特殊颜色）\", color: \"grey\" },  // 表示 value 等于 123 的情况。\n    {\n      value: 0\n    }]\n  }\n};\nexport default {\n  name: 'glomap',\n  created() {\n    this.getData();\n  },\n  methods: {\n    init() {\n      var myChart = echarts.init(document.getElementById(\"charts\"));\n      myChart.setOption(option);\n    },\n    getData() {\n      var that = this;\n      jsonp(\"http://localhost:8081/data\", (err, data) => {\n        // jsonp 在请求创建script标签发送，不受同源策略影响\n        // console.log(data.data.list);\n        let arr = data.data.list;\n        let lists = arr.map(function (e) {\n          console.log(e.location, e.nowdia);\n          return {\n            name: e.location,\n            value: e.nowdia\n          };\n        });\n        option.series[0].data = lists;\n        that.init();\n      });\n    }\n  }\n};","map":{"version":3,"names":["world","jsonp","option","title","text","x","textStyle","color","toolbox","feature","saveAsImage","tooltip","trigger","formatter","series","type","map","zoom","roam","data","label","show","fontSize","emphasis","itemStyle","areaColor","backgroundColor","borderColor","borderWidth","borderType","visualMap","itemWidth","itemHeight","inRange","pieces","min","max","value","name","created","getData","methods","init","myChart","echarts","document","getElementById","setOption","that","err","arr","list","lists","e","console","log","location","nowdia"],"sources":["src/components/glomap.vue"],"sourcesContent":["\n<template>\n    <div style=\"height:500px;width:100%\" id=\"charts\"></div>\n</template>\n\n<script>\nimport world from '../map/js/world'\nimport jsonp from \"jsonp\";\nlet option = {\n  title: {\n    text: \"疫情地图\", //图表 标题\n    x: \"center\",\n    textStyle: {\n      color: \"red\"\n    }\n  },\n  toolbox: {\n    //工具栏\n    feature: {\n      saveAsImage: {} //保存图片\n    }\n  },\n  tooltip: {\n    //提示信息\n    trigger: \"item\", //类型\n    formatter: \"地图：{b}<br/>确诊：{c}\"\n  },\n  series: [\n    //数据\n    {\n      type: \"map\", //图表类型 是地图\n      map: \"world\", //中国地图\n      zoom: 1.2, //缩放比例\n      roam: true,\n      data: [],\n      label: {\n        //图形上的文本标签，可用于说明图形的一些数据信息\n        show: true,\n        color: \"#eee\",\n        fontSize: 10\n      },\n      emphasis: {\n        //输入表移入的显示情况\n        label: {\n          //图形上的文本标签，可用于说明图形的一些数据信息\n          show: true,\n          color: \"#ffffff\", //鼠标移入文字颜色\n          fontSize: 16\n        },\n        itemStyle: {\n          show: true,\n          areaColor: \"#ccc\" //鼠标移入背景颜色\n        }\n      },\n      itemStyle: {\n        backgroundColor: \"red\",\n        borderColor: \"#eee\",\n        borderWidth: 1,\n        borderType: \"solid\",\n        areaColor: \"#ccc\"\n      }\n    }\n  ],\n\n  visualMap: {\n    //视觉映射组件 --侧边柱子\n    type: \"piecewise\", //piecewise 点状视觉映射组件，continuous 直线状视觉映射组件\n    // min: 8, //最低多少\n    // max: 500, //最高多少\n    // text: [\"High\", \"Low\"], //高低处文本\n    // realtime: true, // 拖拽时，是否实时更新\n    // calculable: true, //是否显示拖拽用的手柄（手柄能拖拽调整选中范围）\n    itemWidth: 10, //每个方块的宽度\n    itemHeight: 20, //每个方块的高度\n    inRange: {\n      //范围\n      color: [\"#d0ddec\", \"#42b983\", \"red\"] //高中低处的颜色\n    },\n    pieces: [\n      { min: 400 }, // 不指定 max，表示 max 为无限大（Infinity）。\n      { min: 80, max: 300 },\n      { min: 60, max: 79 },\n      { min: 20, max: 59 },\n      { min: 1, max: 19 },\n      // { value: 123, label: \"123（自定义特殊颜色）\", color: \"grey\" },  // 表示 value 等于 123 的情况。\n      { value: 0 }\n    ]\n  }\n};\nexport default {\n    name:'glomap',\n    created() {\n    this.getData();\n  },\n  methods: {\n    init() {\n      var myChart = echarts.init(document.getElementById(\"charts\"));\n      myChart.setOption(option);\n    },\n    getData() {\n      var that = this;\n      jsonp(\"http://localhost:8081/data\", (err, data) => {\n        // jsonp 在请求创建script标签发送，不受同源策略影响\n        // console.log(data.data.list);\n        let arr = data.data.list;\n        let lists = arr.map(function(e) {\n          console.log(e.location,e.nowdia)\n          return { name: e.location, value: e.nowdia };\n        });\n        option.series[0].data = lists;\n        that.init();\n      });\n    }\n  }\n};\n\n</script>\n"],"mappings":"AAMA,OAAAA,KAAA;AACA,OAAAC,KAAA;AACA,IAAAC,MAAA;EACAC,KAAA;IACAC,IAAA;IAAA;IACAC,CAAA;IACAC,SAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MACAC,WAAA;IACA;EACA;;EACAC,OAAA;IACA;IACAC,OAAA;IAAA;IACAC,SAAA;EACA;EACAC,MAAA;EACA;EACA;IACAC,IAAA;IAAA;IACAC,GAAA;IAAA;IACAC,IAAA;IAAA;IACAC,IAAA;IACAC,IAAA;IACAC,KAAA;MACA;MACAC,IAAA;MACAd,KAAA;MACAe,QAAA;IACA;IACAC,QAAA;MACA;MACAH,KAAA;QACA;QACAC,IAAA;QACAd,KAAA;QAAA;QACAe,QAAA;MACA;MACAE,SAAA;QACAH,IAAA;QACAI,SAAA;MACA;IACA;;IACAD,SAAA;MACAE,eAAA;MACAC,WAAA;MACAC,WAAA;MACAC,UAAA;MACAJ,SAAA;IACA;EACA,EACA;EAEAK,SAAA;IACA;IACAf,IAAA;IAAA;IACA;IACA;IACA;IACA;IACA;IACAgB,SAAA;IAAA;IACAC,UAAA;IAAA;IACAC,OAAA;MACA;MACA1B,KAAA;IACA;;IACA2B,MAAA,GACA;MAAAC,GAAA;IAAA;IAAA;IACA;MAAAA,GAAA;MAAAC,GAAA;IAAA,GACA;MAAAD,GAAA;MAAAC,GAAA;IAAA,GACA;MAAAD,GAAA;MAAAC,GAAA;IAAA,GACA;MAAAD,GAAA;MAAAC,GAAA;IAAA;IACA;IACA;MAAAC,KAAA;IAAA;EAEA;AACA;AACA;EACAC,IAAA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,IAAAC,OAAA,GAAAC,OAAA,CAAAF,IAAA,CAAAG,QAAA,CAAAC,cAAA;MACAH,OAAA,CAAAI,SAAA,CAAA7C,MAAA;IACA;IACAsC,QAAA;MACA,IAAAQ,IAAA;MACA/C,KAAA,gCAAAgD,GAAA,EAAA9B,IAAA;QACA;QACA;QACA,IAAA+B,GAAA,GAAA/B,IAAA,CAAAA,IAAA,CAAAgC,IAAA;QACA,IAAAC,KAAA,GAAAF,GAAA,CAAAlC,GAAA,WAAAqC,CAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,CAAA,CAAAG,QAAA,EAAAH,CAAA,CAAAI,MAAA;UACA;YAAAnB,IAAA,EAAAe,CAAA,CAAAG,QAAA;YAAAnB,KAAA,EAAAgB,CAAA,CAAAI;UAAA;QACA;QACAvD,MAAA,CAAAY,MAAA,IAAAK,IAAA,GAAAiC,KAAA;QACAJ,IAAA,CAAAN,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}